# specify version of base container

ARG BASE_CONTAINER="julianqz/wu_base:main"

FROM "${BASE_CONTAINER}"

LABEL maintainer="Julian Zhou [jqzhou@email.wustl.edu]" \
      description="Customized image for preprocessing bulk BCR using Presto-related tools."

USER root


# script to fetch phix

ARG SCRIPT_PHIX="fetch_phix.sh"
COPY "./scripts/${SCRIPT_PHIX}" .

# script to install prestor
# ~280s

ARG SCRIPT_R="wu_presto_r.R"
COPY "${SCRIPT_R}" .


# specify versions of tools
# Immcantation suite image uses blast 2.9.0 as of v4.2.0
# prestor version detected after installation from latest bitbucket source code

ARG VERSION_PRESTO="0.6.2"
#ARG VERSION_PRESTOR="0.0.6"
ARG VERSION_BLAST="2.11.0"
ARG VERSION_CDHIT="4.8.1"
ARG VERSION_MUSCLE="3.8.425"
ARG VERSION_VSEARCH="2.13.6"


# Download and build phix

RUN "./${SCRIPT_PHIX}" -o /usr/local/share/phix && rm "${SCRIPT_PHIX}"


# Install prestor
# ~51s

RUN Rscript "${SCRIPT_R}" && rm "${SCRIPT_R}"

# cd-hit installation requires zlib if support for .gz format input file is wanted
# without `apt-get update`, error if specifying `zlib1g-dev`: Unable to locate package zlib1g-dev
# to see where zlib is installed: dpkg -L zlib1g-dev

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install \
    zlib1g-dev


# Install CD-HIT
# https://github.com/weizhongli/cdhit
# To compile without zlib (if you can not install zlib): `make zlib=no && make install`

RUN wget -q --show-progress --no-check-certificate \
    https://github.com/weizhongli/cdhit/archive/V${VERSION_CDHIT}.tar.gz \
    && tar -zxf V${VERSION_CDHIT}.tar.gz \
    && (cd cdhit-${VERSION_CDHIT} && make && make install) \
    && rm -r V${VERSION_CDHIT}.tar.gz cdhit-${VERSION_CDHIT} \
    && cd ..

# Install BLAST+ executables

RUN wget -q --show-progress --no-check-certificate \
    ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/${VERSION_BLAST}/ncbi-blast-${VERSION_BLAST}+-x64-linux.tar.gz \
    && tar -zxf ncbi-blast-${VERSION_BLAST}+-x64-linux.tar.gz \
    && mkdir -p /usr/local/bin \
    && mv ncbi-blast-${VERSION_BLAST}+/bin /usr/local/bin/blast \
    && rm -r ncbi-blast-${VERSION_BLAST}+-x64-linux.tar.gz ncbi-blast-${VERSION_BLAST}+

# Install muscle

RUN wget -q --show-progress --no-check-certificate \
    http://www.drive5.com/muscle/muscle${VERSION_MUSCLE}_binaries.tar.gz \
    && tar -zxf muscle${VERSION_MUSCLE}_binaries.tar.gz muscle${VERSION_MUSCLE}_i86linux64 \
    && mv muscle${VERSION_MUSCLE}_i86linux64 /usr/local/bin/muscle \
    && rm muscle${VERSION_MUSCLE}_binaries.tar.gz

# Install vsearch

RUN wget -q --show-progress --no-check-certificate \
    http://github.com/torognes/vsearch/releases/download/v${VERSION_VSEARCH}/vsearch-${VERSION_VSEARCH}-linux-x86_64.tar.gz \
    && tar -zxf vsearch-${VERSION_VSEARCH}-linux-x86_64.tar.gz \
    && mv vsearch-${VERSION_VSEARCH}-linux-x86_64/bin/vsearch /usr/local/bin/vsearch \
    && ln -s /usr/local/bin/vsearch /usr/local/bin/usearch \
    && rm -r vsearch-${VERSION_VSEARCH}-linux-x86_64.tar.gz vsearch-${VERSION_VSEARCH}-linux-x86_64

# Install presto

RUN pip install "presto==${VERSION_PRESTO}"


# Switch back to jovyan to avoid accidental container runs as root

USER "${NB_UID}"


# build info

ARG PATH_INFO="work/docker_build_info.txt"

RUN date > "${PATH_INFO}" && \
    python -V >> "${PATH_INFO}" && \
    MaskPrimers.py --version >> "${PATH_INFO}" && \
    echo "blast: ${VERSION_BLAST}" >> "${PATH_INFO}" && \
    echo "muscle: ${VERSION_MUSCLE}" >> "${PATH_INFO}" && \
    echo "vsearch: ${VERSION_VSEARCH}" >> "${PATH_INFO}" && \
    echo "cd-hit: ${VERSION_CDHIT}" >> "${PATH_INFO}" && \
    Rscript -e "version[['version.string']]" >> "${PATH_INFO}" && \
    Rscript -e "versions::installed.versions(pkgs='prestor')" >> "${PATH_INFO}"
